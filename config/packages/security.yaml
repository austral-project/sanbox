security:
  role_hierarchy:
    ROLE_ROOT:      [ ROLE_ADMIN_ACCESS, ROLE_USER_ACCESS, ROLE_ALLOWED_TO_SWITCH ]

  encoders:
    Austral\SecurityBundle\Entity\User:
      algorithm: bcrypt

  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    austral_security_user:
      id:         austral.security.user_provider

  firewalls:
    dev:
      pattern:    ^/(_(profiler|wdt)|css|images|js)/
      security:   false
    admin:
      pattern:    ^/admin
      anonymous:  true
      security:   true
      lazy:       true
      provider:   austral_security_user
      logout:
        path:   austral_admin_security_logout
        target: austral_admin_security_login
      guard:
        authenticators:
          - austral.security.authenticator
      remember_me:
        secret:             '%kernel.secret%'
        lifetime:           604800 # 1 week in seconds
        always_remember_me: true
    main:
      anonymous: true
      security: true
      lazy: true
      provider: austral_security_user
      logout:
        path:   security_logout
        target: security_login
      guard:
        authenticators:
          - austral.security.authenticator
      remember_me:
        secret:         '%kernel.secret%'
        lifetime:       604800 # 1 week in seconds
        always_remember_me: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
      - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: '^/admin/translation-([a-z]{2}).js$', roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/admin, roles: ROLE_ADMIN_ACCESS }
      - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY}
      - { path: '^/translation-([a-z]{2}).js$', roles: IS_AUTHENTICATED_ANONYMOUSLY}
      - { path: ^/_wdt, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/_profiler, roles: IS_AUTHENTICATED_ANONYMOUSLY}
      - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY}